#eval "$(atuin init zsh --disable-up-arrow --disable-ctrl-r)"
atuin-setup() {
    if ! which atuin &> /dev/null; then return 1; fi
    bindkey '^E' _atuin_search_widget

    export ATUIN_NOBIND="true"
    eval "$(atuin init "zsh")"
    fzf-atuin-history-widget() {
        local selected num
        setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2>/dev/null

        # local atuin_opts="--cmd-only --limit ${ATUIN_LIMIT:-5000}"
         local atuin_opts="--cmd-only --limit ${ATUIN_LIMIT:-5000}"
        #local atuin_opts="--cmd-only"
        #local atuin_opts="--format '{count_id}  {command}'"
        local fzf_opts=(
            --height=${FZF_TMUX_HEIGHT:-40%}
            --tac
            "-n2..,.."
            --tiebreak=index
            "--query=${LBUFFER}"
            --scheme=history
            "+m"
            '--preview=echo {}'
            "--preview-window=down:3:hidden:wrap"
            "--bind=?:toggle-preview"
            "--bind=ctrl-d:reload(atuin search $atuin_opts -c $PWD),ctrl-r:reload(atuin search $atuin_opts)"
        )

        selected=$(
            eval "atuin search ${atuin_opts}" | nl |
                fzf "${fzf_opts[@]}"
        )
        local ret=$?
        if [ -n "$selected" ]; then
            # Remove the count_id from the selected line
            selected_with_count_id_cut=$(echo $selected | awk -F '\t' '{print $2}')
            # the += lets it insert at current pos instead of replacing
            LBUFFER="${selected_with_count_id_cut}"
        fi
        zle reset-prompt
        return $ret
    }
    zle -N fzf-atuin-history-widget
    bindkey '^R' fzf-atuin-history-widget
}
atuin-setup
