{{ if .install_packages -}}

{{ if ne .osid "windows" -}}
#!/usr/bin/env bash
{{ end -}}

# TODO: Inspire oneself using
# https://github.com/twpayne/dotfiles/blob/master/home/.chezmoiscripts/linux/run_onchange_before_install-packages.sh.tmpl

# Install various packages

{{ if eq .osid "linux-debian" -}}
echo "Installing debian dependencies"
sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen # needed for debian
echo 'LANG=en_US.UTF-8' > /etc/default/locale
{{ end -}}

{{ if or (eq .osid "linux-rocky") (eq .osid "linux-rhel") -}}
echo "Installing rocky / rhel dependencies"
sudo dnf install -y 'dnf-command(config-manager)'
sudo dnf config-manager --set-enabled crb
{{ end -}}

{{ if or (eq .osid "linux-centos") (eq .osid "linux-rocky") (eq .osid "linux-rhel") -}}
echo "Installing centos / rocky / rhel dependencies"
sudo dnf install -y epel-release
sudo dnf install -y epel-next-release
# util-linux-user provides chsh
sudo dnf install -y util-linux-user which
{{ end -}}

{{ if contains "linux-arch" .osid -}}
echo "Installing arch dependencies"
sudo localectl set-locale LANG=en_US.UTF-8
sudo pacman -Sy --disable-sandbox --noconfirm which
{{ end -}}

{{ if or (eq .osid "linux-ubuntu") (eq .osid "linux-debian")  -}}
echo "Installing ubuntu-like dependencies"

sudo apt install -y locales
sudo locale-gen en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

sudo apt install -y ripgrep htop silversearcher-ag fd-find git zsh tig btop

ln -s $(which fdfind) ~/.local/bin/fd

{{ else if or (eq .osid "linux-fedora") (eq .osid "linux-centos") (eq .osid "linux-rocky") (eq .osid "linux-rhel") -}}
echo "Installing rhel-like dependencies"
sudo dnf install -y ripgrep htop the_silver_searcher fd-find git zsh tig btop

{{ else if eq .osid "linux-opensuse-leap" -}}
echo "Installing suse dependencies"
sudo zypper install -y ripgrep htop the_silver_searcher fd git zsh tig btop

{{ else if contains "linux-arch" .osid -}}
echo "Installing arch dependencies"
sudo pacman -Sy --disable-sandbox --noconfirm ripgrep htop the_silver_searcher fd git zsh tig btop

{{ else if eq .osid "linux-alpine" -}}
echo "Installing alpine dependencies"
sudo apk add ripgrep htop the_silver_searcher fd git zsh tig btop

{{ else if eq .osid "darwin" -}}
echo "Installing macOS dependencies"
if ! command -v brew &> /dev/null; then
  echo "Homebrew not found, installing..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  echo "Homebrew already installed"
fi
brew install ripgrep htop the_silver_searcher fd cmake git ninja zsh zoxide tig btop mise fzf yazi fzf aria2 atuin bat
brew install xcodesorg/made/xcodes
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}
echo "Install zoxide"
curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
{{ end -}}

{{ if ne .osid "windows" -}}
# Install oh my zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  echo "Installing oh-my-zsh"
  ZSH=
  sh -c "$(curl -fsSL https://install.ohmyz.sh/)" "" --unattended
else
  echo "oh-my-zsh already installed"
fi

# Install zsh-autosuggestions
if [ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
  echo "Installing zsh-autosuggestions"
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
else
  echo "zsh-autosuggestions already installed"
fi
touch ~/.zshrc

{{ if eq .chezmoi.os "linux" -}}
sed -i 's/ZSH_THEME=\"robbyrussell\"/ZSH_THEME=\"bira\"/g' ~/.zshrc
{{ else if eq .osid "darwin" -}}
sed -i.bak 's/ZSH_THEME=\"robbyrussell\"/ZSH_THEME=\"bira\"/g' ~/.zshrc
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}
# Change the default shell Linux
zsh_path=$(which zsh)
if [ "$SHELL" != "$zsh_path" ]; then
  echo "Changing default shell to zsh"
  sudo chsh -s $zsh_path
else
  echo "Default shell is already zsh"
fi
{{ end -}}

# End of not windows
{{ end -}}

# end of install_packages
{{ end -}}
